on: push

permissions:
  contents: write

env:
  SKIP_RISCV: 0

jobs:
  build_windows:
    name: Build Windows
    # runs-on: [self-hosted, Windows, x64]
    runs-on: 'windows-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup SSH Auth
        if: runner.environment == 'github-hosted'
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Build
        run: ./build.ps1 ./config/x64-win.json -SkipSigning
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools-x64-win
          path: |
            bin/picotool-*-x64-win.zip
            bin/pico-sdk-tools-*-x64-win.zip
            bin/openocd-*-x64-win.zip
      - name: Add Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bin/picotool-*-x64-win.zip
            bin/pico-sdk-tools-*-x64-win.zip
            bin/openocd-*-x64-win.zip

  build_macos:
    name: Build MacOS
    # runs-on: [self-hosted, macOS]
    runs-on: 'macos-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Homebrew
        if: runner.environment == 'github-hosted'
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Set up x86_64 Homebrew
        if: runner.environment == 'github-hosted'
        run: |
          NONINTERACTIVE=1 arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Setup SSH Auth
        if: runner.environment == 'github-hosted'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Build
        run: ./build_macos.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools-mac
          path: |
            bin/picotool-*-mac.zip
            bin/pico-sdk-tools-*-mac.zip
            bin/openocd-*-mac.zip
            bin/riscv-toolchain-*.zip
      - name: Add Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bin/picotool-*-mac.zip
            bin/pico-sdk-tools-*-mac.zip
            bin/openocd-*-mac.zip
            bin/riscv-toolchain-*.zip

  build_linux:
    name: Build Linux
    # strategy:
    #   matrix:
    #     os: [[self-hosted, linux, x64], [self-hosted, linux, arm64]]
    strategy:
      matrix:
        os: [ubuntu-latest, [self-hosted, linux, arm64]]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup SSH Auth
        if: runner.environment == 'github-hosted'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Build
        run: ./build_linux.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools-lin-${{ runner.arch }}
          path: |
            bin/picotool-*-lin.tar.gz
            bin/pico-sdk-tools-*-lin.tar.gz
            bin/openocd-*-lin.tar.gz
            bin/riscv-toolchain-*-lin.tar.gz
      - name: Add Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bin/picotool-*-lin.tar.gz
            bin/pico-sdk-tools-*-lin.tar.gz
            bin/openocd-*-lin.tar.gz
            bin/riscv-toolchain-*-lin.tar.gz
